[buildout]
develop =
    .
    ../pyon
parts =
    numpy-install
    h5py
    python
    unittest
eggs =
    coverage-model

unzip = true

# extends = versions.cfg
versions = versions

# When set to false, buildout and its recipe versions must be
# explicitly pinned down and defined.
allow-picked-versions = true

# Useful line to print out the buildout versions you are using
extensions = buildout-versions

# Tells buildout where to download packages in addition to Pypi.
find-links =
    http://sddevrepo.oceanobservatories.org/releases/

# Use this section only if you want to override the
# versions in the parent file.
[versions]
setuptools=0.6c11
h5py=2.0.1
pyzmq=2.2.0

# Added specific include dir to work with brew install on Mac
[pyzmq]
recipe = zc.recipe.egg:custom
include-dirs = /usr/local/include

[h5py]
recipe = zc.recipe.egg:custom
include-dirs = /usr/local/include

[numpy-src]
recipe = hexagonit.recipe.download
url = http://pypi.python.org/packages/source/n/numpy/numpy-1.6.1.tar.gz#md5=2bce18c08fc4fce461656f0f4dd9103e
ignore-existing = true

[numpy-install]
recipe = z3c.recipe.egg:setup
setup = ${numpy-src:location}/numpy-1.6.1
args =
    clean
    build
    install

[matplotlib-src]
recipe = hexagonit.recipe.download
url = http://sourceforge.net/projects/matplotlib/files/matplotlib/matplotlib-1.1.0/matplotlib-1.1.0.tar.gz

[matplotlib-install]
recipe = z3c.recipe.egg:setup
setup = ${matplotlib-src:location}/matplotlib-1.1.0
args =
    clean
    build
    install

[python]
recipe = zc.recipe.egg
interpreter = python
scripts =
    nosetests
    pycc
    pyccd
    control_cc
    generate_interfaces
    store_interfaces
    clear_couch
    ipython
    coverage
entry-points =
    pycc=scripts.pycc:entry
    pyccd=scripts.pyccd:start_debugging
    control_cc=scripts.control_cc:main
    generate_interfaces=scripts.generate_interfaces:main
    store_interfaces=scripts.store_interfaces:main
    clear_couch=pyon.datastore.clear_couch_util:main
    ipython=scripts.ipython:main
    nosetests=nose:run_exit
    coverage=coverage:main
eggs =
    ${buildout:eggs}

[unittest]
recipe = iw.recipe.cmd:py
on_install = true
on_update = true
cmds=
  import os
  input = open(os.path.join(buildout.get('directory', '.'), 'unittest'))
  bin_dir = buildout.get('bin-directory', 'bin')
  output_file = os.path.join(bin_dir, 'unittest')
  output = open(output_file, 'w')
  [output.write(s.replace('python', os.path.join(bin_dir, 'python'))) for s in input.xreadlines()]
  output.close()
  input.close()
  os.system('chmod +x %s' % output_file)
